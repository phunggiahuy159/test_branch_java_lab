WHEN SHOULD ACCESSOR METHOD BE USED?:
-Encapsulation: Accessor methods help enforce encapsulation by providing controlled access to the internal state of an object. Instead of allowing direct access to the object's attributes, we can use accessor methods to get their values, thereby hiding the implementation details and protecting the integrity of the object's state.
-Read-only Access: When we want to allow external code to read the value of an attribute but not modify it, accessor methods are essential. By providing only a getter method for that attribute, we ensure that the value cannot be changed from outside the class.
-Data Validation and Transformation: Accessor methods can include logic to validate the data being accessed or transform it in some way before returning it. 
-Future Compatibility: By using accessor methods instead of directly accessing the attributes, we have the flexibility to change the internal implementation of the class without affecting the external code that uses it. 
-Debugging and Logging: Accessor methods provide a place to add logging or debugging code. We can log when an attribute is accessed and the value it returns, which can be helpful for debugging and tracking program behavior.
-Maintainability and Readability: Accessor methods improve code maintainability and readability by providing a clear and consistent interface for accessing object attributes. This makes the code easier to understand and modify, especially in larger projects with multiple developers.
QUESTION: If you create a constructor method to build a DVD by title then create a constructor method to build a DVD by category. Does JAVA allow you to do this?
-Because both the title and the category must use string, so if we pass argument to the constructor, java will not know what we want to build so the error happen
